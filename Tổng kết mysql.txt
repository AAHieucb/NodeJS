//!!!!!!!!


MySQL => ref tới "DatabaseAndSQL"


# Basic
-> Cài đặt:
- Cài qua xampp 
- Dùng hosting cloud, VD myasp.net
- Tải thẳng db server mysql về 

--> Qua docker: docker pull mysql => ref tới "Tool / Docker"
docker run --name testmyssql1.0.0 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=passroot -d mysql --max_connections=1000 => chạy image mysql với max 1000 connections truy cập cùng lúc, password là passroot
docker exec -it testmyssql1.0.0 bash => vào bash

mysql => access denied vì user root cần password
mysql -uroot -ppassroot => vào tương tác được với database mysql bằng cmd, nhập đúng username là root, password là passroot (nhớ tắt unikey)

-> Setup user: CREATE USER 'testuser'@'%' IDENTIFIED BY 'testpass'; => Tạo user mới là testuser với password là testpass, dùng cho server
create database aliconcon;
GRANT ALL PRIVILEGES ON aliconcon.* TO 'testuser'@'%'; => grant cho testuser mọi quyền của database aliconcon
FLUSH PRIVILEGES;
show processlist; => xem các connection hiện tại đang kết nối vào database
show variables like "max_connections"; => xem max connection có thể có đồng thời vào database này, nếu quá sẽ báo lỗi

-> SQL Workbench là UI quản lý db mysql => dùng xampp có phpmyadmin dễ nhìn hơn
Tải MySQL Workbench -> Default Schema đặt là tên database, đặt username và password của user muốn đăng nhập, host 127.0.0.1 và port 3306 để connect vào bên mysql docker



# Dùng mysql2 nodejs
-> Connect db: 
- createConnection: mỗi lần gọi sẽ tạo ra 1 connection mới tới database. Ta phải chủ động createconnection rồi đóng ở cuối API => bỏ
- createPool (luôn dùng): gọi 1 lần createPool tạo 1 list các connection tùy vào nhu cầu người dùng nhưng k được vượt quá max. Vd ta set max là 10 mà có 5 request độc lập tới db cùng lúc thì sẽ chỉ tạo 5 connection thôi, nếu có 20 requests cùng lúc mới tạo tới max 10 connections. Đóng connection sẽ sleep để wakeup tái sử dụng về sau.



# Other
-> sysbench là tool test performance, mock data cho sql, mock 1 phát mấy triệu r test luôn. URL: https://www.youtube.com/watch?v=dpDGXbe_LeE


